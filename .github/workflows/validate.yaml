name: Validate

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  validate_hacs:
    name: "HACS"
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - name: HACS validation
        uses: "hacs/integration/action@master"
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CATEGORY: "integration"
  validate_hassfest:
    name: "Hassfest"
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - name: Hassfest validation
        uses: "home-assistant/actions/hassfest@master"
  test_advice_flake8:
    name: "Test + advice with flake8"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}-1
          restore-keys: |
            ${{ runner.os }}-pip--1
      - name: Install dependencies
        run: |
          python -m pip install --upgrade -r requirements.txt
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82,D100,D400,D102,D103 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=90 --statistics --ignore=I
      - name: Detailed stats install
        if: matrix.python-version == '3.8'
        run: |
          python -m pip install --upgrade wemake-python-styleguide
      - name: Detailed stats
        if: matrix.python-version == '3.8'
        run: |
          flake8 . --inline-quotes '"' --count --exit-zero --max-complexity=15 --max-line-length=90 --statistics --ignore=I,WPS305,C812
  format:
    name: "Format with black and isort"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-2
          restore-keys: |
            ${{ runner.os }}-pip-2
      - name: Install dependencies
        run: python -m pip install --upgrade -r requirements.txt -r requirements_format.txt
      - name: Pull again
        run: git pull
      - name: Run formatting
        run: |
          python -m isort -v .
          python -m black -v --line-length 75 .
          python -m isort -v .
          python -m black -v --line-length 75 .
      - name: Commit files
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "GitHub Actions"
          git commit -m "Run formatting" -a || true
      - name: Push changes
        run: git push || true
